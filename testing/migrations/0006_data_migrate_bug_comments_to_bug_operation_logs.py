# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-22 10:36
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.contenttypes.models import ContentType
from django.utils import timezone


def data_migrate_bug_comments_to_bug_operation_logs(apps, schema_editor):
    # 通过get_model获取的Model是当执行脚本时前数据库的model 不是代码中最新的model
    Comment = apps.get_model("comments", "Comment")
    Bug = apps.get_model("testing", "Bug")
    BugOperationLog = apps.get_model("testing", "BugOperationLog")

    '''
    遍历所有Bug
        遍历每个bug下所有一级评论Comment
            创建一个评论的操作BugOperationLog: 创建人creator、创建时间>操作人、创建时间
            将一级评论关联到该操作(修改content_object)
                取一级评论下所有子评论 关联到该操作
    '''

    bugs = Bug.objects.all()
    for bug in bugs:
        bug_content_type = ContentType.objects.get(app_label="testing", model="bug")
        comments = Comment.objects.filter(content_type_id=bug_content_type.id, object_id=bug.id).filter(parent_id=None)
        for comment in comments:
            log = BugOperationLog.objects.create(bug=bug, operator=comment.creator, log_type="comment")
            log.created_at = comment.created_at
            log.save()
            comment.content_object = log
            comment.save()
            child_comments = get_child_comments(comment)
            for child in child_comments:
                child.content_object = log
                child.save()


def get_child_comments(comment):
    child_comments = comment.child_comments.all()
    for child in child_comments:
        child_comments = child_comments | get_child_comments(child)
    return child_comments


class Migration(migrations.Migration):
    dependencies = [
        ('testing', '0005_bugoperationlog'),
        ('comments', '0013_comment_creator'),
    ]

    operations = [
        migrations.RunPython(data_migrate_bug_comments_to_bug_operation_logs, migrations.RunPython.noop),
    ]
