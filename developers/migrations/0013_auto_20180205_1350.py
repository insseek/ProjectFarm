# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2018-02-05 13:50
from __future__ import unicode_literals

import developers.models
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('developers', '0012_add_permission_for_csm'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaggedDevelopmentLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedFrameworks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='developer',
            old_name='desc',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='developer',
            old_name='bank_info',
            new_name='payment_info',
        ),
        migrations.RemoveField(
            model_name='developer',
            name='bank_account',
        ),
        migrations.RemoveField(
            model_name='developer',
            name='bank_name',
        ),
        # migrations.RemoveField(
        #     model_name='developer',
        #     name='tags',
        # ),
        migrations.AddField(
            model_name='developer',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to=developers.models.Developer.generate_filename, verbose_name='头像'),
        ),
        migrations.AddField(
            model_name='developer',
            name='expected_work_at',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='developer',
            name='gender',
            field=models.CharField(choices=[('0', '女'), ('1', '男'), ('2', '未填写')], default='2', max_length=2, verbose_name='性别'),
        ),
        migrations.AddField(
            model_name='developer',
            name='location',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='地址'),
        ),
        migrations.AlterField(
            model_name='developer',
            name='status',
            field=models.CharField(choices=[('0', '弃用'), ('1', '可接单'), ('2', '不可接单')], default='1', max_length=2, verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='taggedframeworks',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developers.Developer'),
        ),
        migrations.AddField(
            model_name='taggedframeworks',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developers_taggedframeworks_items', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='taggeddevelopmentlanguage',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='developers.Developer'),
        ),
        migrations.AddField(
            model_name='taggeddevelopmentlanguage',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developers_taggeddevelopmentlanguage_items', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='developer',
            name='development_languages',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='developers.TaggedDevelopmentLanguage', to='taggit.Tag', verbose_name='开发语言'),
        ),
        migrations.AddField(
            model_name='developer',
            name='frameworks',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='developers.TaggedFrameworks', to='taggit.Tag', verbose_name='开发框架工具'),
        ),
    ]
