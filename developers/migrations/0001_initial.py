# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-20 10:25
from __future__ import unicode_literals

from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', '正常'), ('B', '弃用')], default='A', max_length=2, verbose_name='状态')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='名称')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='电话')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('qq', models.CharField(blank=True, max_length=10, null=True, verbose_name='QQ')),
                ('wechat', models.CharField(blank=True, max_length=20, null=True, verbose_name='微信')),
                ('bank_info', models.TextField(blank=True, null=True, verbose_name='打款方式')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='developer',
            name='roles',
            field=models.ManyToManyField(to='developers.Role', verbose_name='职位'),
        ),
        migrations.AddField(
            model_name='developer',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
